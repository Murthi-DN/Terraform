
-------------------------------------------------------------------------

* Used to automate and manage infrastructure
* Infrastructure Provisioning

Ex:
You Create an app manually
	* Virtual Network
	* Create VMs
	* Install Dockers
	* Manage Security 
	* Deploy App

* To Automate this with a script
* To manage easily in future if need change
* To replicate infra (Duplicating)

-------------------------------------------------------------------------

Difference Between Ansible and Terraform

* Both are same IaC
* Both are provisioning, configurring and managing the Infra
* Ansible is mainly Configuring tool but Terraform is Infra Provision Tool
* So once Infra is provissioned, Ansible can be used to configure, deploy, install/update apps
* Ansible is more stable/mature and better for infrastructure configuring 
* Terraform is more advanced in orchestration

So Terraform is good for Provisioning and Ansible is good for configure, deploy, insatll/update

-------------------------------------------------------------------------

Architecture:

	* TF-Config: Where we define all configuration (desire)
	* State: What is the current state of it (actual)

	CORE: Take above files, compare, plans (Source)
	Providers: Cloud's IaaS | PaaS | SaaS (Destination)

	So CORE Starts executing on Providers!

-------------------------------------------------------------------------

Simple TF Config File.tf

	provider "kubernetes" {

	}

	resource "namespace" "name"{

	}

-------------------------------------------------------------------------

Commands:

tf init:

	* Initialization

tf fmt (Format):
	* Cleans code, ex: Spaces remove

tf validate:
	* Checks Syntax

tf refresh:
	* Queries Infra Provider to get current state

tf plan:
	* Create an execution plan by CORE

Above are just preview but no changes to real infra

tf apply:
	Execute the plan

tf destroy:
	To clean up

-------------------------------------------------------------------------